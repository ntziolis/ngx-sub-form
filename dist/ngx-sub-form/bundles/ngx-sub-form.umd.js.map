{"version":3,"file":"ngx-sub-form.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-sub-form/lib/ngx-sub-form-tokens.ts","ng://ngx-sub-form/lib/ngx-sub-form-utils.ts","ng://ngx-sub-form/lib/sub-form-group.ts","ng://ngx-sub-form/lib/abstract-control-utils.ts","ng://ngx-sub-form/lib/ngx-sub-form.component.ts","ng://ngx-sub-form/lib/ngx-root-form.component.ts","ng://ngx-sub-form/lib/ngx-automatic-root-form.component.ts","ng://ngx-sub-form/lib/sub-form.directive.ts","ng://ngx-sub-form/lib/ngx-sub-form.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\nimport { NgxSubFormComponent } from './ngx-sub-form.component';\r\n\r\n// ----------------------------------------------------------------------------------------\r\n// no need to expose that token out of the lib, do not export that file from public_api.ts!\r\n// ----------------------------------------------------------------------------------------\r\n\r\n// see https://github.com/angular/angular/issues/8277#issuecomment-263029485\r\n// this basically allows us to access the host component\r\n// from a directive without knowing the type of the component at run time\r\nexport const SUB_FORM_COMPONENT_TOKEN = new InjectionToken<NgxSubFormComponent<any>>('NgxSubFormComponentToken');\r\n","import { forwardRef, OnDestroy, Provider } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormArray,\r\n  FormControl,\r\n  FormGroup,\r\n  NG_VALIDATORS,\r\n  NG_VALUE_ACCESSOR,\r\n  ValidationErrors,\r\n} from '@angular/forms';\r\nimport { Observable, Subject, timer } from 'rxjs';\r\nimport { debounce, takeUntil } from 'rxjs/operators';\r\n\r\nimport { SUB_FORM_COMPONENT_TOKEN } from './ngx-sub-form-tokens';\r\nimport { NgxSubFormComponent } from './ngx-sub-form.component';\r\n\r\nexport type Controls<T> = { [K in keyof T]-?: AbstractControl };\r\n\r\nexport type ControlsNames<T> = { [K in keyof T]-?: K };\r\n\r\nexport type ControlMap<T, V> = { [K in keyof T]-?: V };\r\n\r\nexport type ControlsType<T> = {\r\n  [K in keyof T]-?: T[K] extends any[] ? TypedFormArray<T[K]> : TypedFormControl<T[K]> | TypedFormGroup<T[K]>;\r\n};\r\n\r\nexport type FormErrorsType<T> = {\r\n  [K in keyof T]-?: T[K] extends any[] ? (null | ValidationErrors)[] : ValidationErrors;\r\n};\r\n\r\nexport type FormUpdate<FormInterface> = { [FormControlInterface in keyof FormInterface]?: true };\r\n\r\nexport type FormErrors<FormInterface> = null | Partial<\r\n  FormErrorsType<FormInterface> & {\r\n    formGroup?: ValidationErrors;\r\n  }\r\n>;\r\n\r\n// using set/patch value options signature from form controls to allow typing without additional casting\r\nexport interface TypedAbstractControl<TValue> extends AbstractControl {\r\n  value: TValue;\r\n  valueChanges: Observable<TValue>;\r\n  setValue(value: TValue, options?: Parameters<AbstractControl['setValue']>[1]): void;\r\n  patchValue(value: Partial<TValue>, options?: Parameters<AbstractControl['patchValue']>[1]): void;\r\n}\r\n\r\nexport interface TypedFormGroup<TValue> extends FormGroup {\r\n  value: TValue;\r\n  valueChanges: Observable<TValue>;\r\n  controls: ControlsType<TValue>;\r\n  setValue(value: TValue, options?: Parameters<FormGroup['setValue']>[1]): void;\r\n  patchValue(value: Partial<TValue>, options?: Parameters<FormGroup['patchValue']>[1]): void;\r\n  getRawValue(): TValue;\r\n}\r\n\r\nexport interface TypedFormArray<TValue extends any[]> extends FormArray {\r\n  value: TValue;\r\n  valueChanges: Observable<TValue>;\r\n  controls: TypedAbstractControl<TValue>[];\r\n  setValue(value: TValue, options?: Parameters<FormArray['setValue']>[1]): void;\r\n  patchValue(value: TValue, options?: Parameters<FormArray['patchValue']>[1]): void;\r\n  getRawValue(): TValue;\r\n}\r\n\r\nexport interface TypedFormControl<TValue> extends FormGroup {\r\n  value: TValue;\r\n  valueChanges: Observable<TValue>;\r\n  setValue(value: TValue, options?: Parameters<FormControl['setValue']>[1]): void;\r\n  patchValue(value: Partial<TValue>, options?: Parameters<FormControl['patchValue']>[1]): void;\r\n}\r\n\r\nexport type KeysWithType<T, V> = { [K in keyof T]: T[K] extends V ? K : never }[keyof T];\r\n\r\nexport type ArrayPropertyKey<T> = KeysWithType<T, Array<any>>;\r\n\r\nexport type ArrayPropertyValue<T, K extends ArrayPropertyKey<T> = ArrayPropertyKey<T>> = T[K] extends Array<infer U>\r\n  ? U\r\n  : never;\r\n\r\nexport function subformComponentProviders(component: any): Provider[] {\r\n  return [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => component),\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => component),\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: SUB_FORM_COMPONENT_TOKEN,\r\n      useExisting: forwardRef(() => component),\r\n    },\r\n  ];\r\n}\r\n\r\nconst wrapAsQuote = (str: string): string => `\"${str}\"`;\r\n\r\nexport class MissingFormControlsError<T extends string> extends Error {\r\n  constructor(missingFormControls: T[]) {\r\n    super(\r\n      `Attempt to update the form value with an object that doesn't contains some of the required form control keys.\\nMissing: ${missingFormControls\r\n        .map(wrapAsQuote)\r\n        .join(`, `)}`,\r\n    );\r\n  }\r\n}\r\n\r\nexport const NGX_SUB_FORM_HANDLE_VALUE_CHANGES_RATE_STRATEGIES = {\r\n  debounce: <T, U>(time: number): ReturnType<NgxSubFormComponent<T, U>['handleEmissionRate']> => obs =>\r\n    obs.pipe(debounce(() => timer(time))),\r\n};\r\n\r\n/**\r\n * Easily unsubscribe from an observable stream by appending `takeUntilDestroyed(this)` to the observable pipe.\r\n * If the component already has a `ngOnDestroy` method defined, it will call this first.\r\n * Note that the component *must* implement OnDestroy for this to work (the typings will enforce this anyway)\r\n */\r\nexport function takeUntilDestroyed<T>(component: OnDestroy): (source: Observable<T>) => Observable<T> {\r\n  return (source: Observable<T>): Observable<T> => {\r\n    const onDestroy = new Subject();\r\n    const previousOnDestroy = component.ngOnDestroy;\r\n\r\n    component.ngOnDestroy = () => {\r\n      if (previousOnDestroy) {\r\n        previousOnDestroy.apply(component);\r\n      }\r\n\r\n      onDestroy.next();\r\n      onDestroy.complete();\r\n    };\r\n\r\n    return source.pipe(takeUntil(onDestroy));\r\n  };\r\n}\r\n\r\n/** @internal */\r\nexport function isNullOrUndefined(obj: any): obj is null | undefined {\r\n  return obj === null || obj === undefined;\r\n}\r\n","import { EventEmitter, ChangeDetectorRef } from '@angular/core';\r\nimport {\r\n  AbstractControlOptions,\r\n  AsyncValidatorFn,\r\n  FormGroup,\r\n  ValidatorFn,\r\n  FormControl,\r\n  FormArray,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\n\r\nimport { NgxSubFormComponent } from './ngx-sub-form.component';\r\n\r\nclass CustomEventEmitter<TControl, TForm = TControl> extends EventEmitter<TControl> {\r\n  private subForm!: NgxSubFormComponent<TControl, TForm>;\r\n  private transformToFormGroup!: NgxSubFormComponent<TControl, TForm>['transformToFormGroup'];\r\n  private transformFromFormGroup!: NgxSubFormComponent<TControl, TForm>['transformFromFormGroup'];\r\n  private getDefaultValues!: NgxSubFormComponent<TControl, TForm>['getDefaultValues'];\r\n\r\n  setSubForm(subForm: NgxSubFormComponent<TControl, TForm>) {\r\n    this.subForm = subForm;\r\n\r\n    this.transformToFormGroup = (obj: TControl | null, defaultValues: Partial<TForm>) => {\r\n      return this.subForm['transformToFormGroup'](obj, defaultValues) || ({} as TForm);\r\n    };\r\n    this.transformFromFormGroup = this.subForm['transformFromFormGroup'];\r\n    this.getDefaultValues = this.subForm['getDefaultValues'];\r\n  }\r\n\r\n  emit(value?: TControl): void {\r\n    // all those would happen while the sub-form tree is still being initalized\r\n    // we can safely ignore all emits until subForm is set\r\n    // since in ngOnInit of sub-form-component base class we call reset with the intial values\r\n    if (!this.subForm) {\r\n      return;\r\n    }\r\n\r\n    const transformedValue = (this.transformToFormGroup((value as any) as TControl | null, {}) as unknown) as TControl;\r\n\r\n    // TODO figure out how to handle for arrays\r\n    // this.subForm.handleFormArrayControls(transformedValue);\r\n\r\n    return super.emit(transformedValue);\r\n  }\r\n}\r\n\r\nexport class SubFormGroup<TControl, TForm = TControl> extends FormGroup {\r\n  private subForm!: NgxSubFormComponent<TControl, TForm>;\r\n\r\n  public cd: ChangeDetectorRef | undefined;\r\n  private isRoot = false;\r\n  private _valueChanges: CustomEventEmitter<TControl, TForm>;\r\n  public controlValue!: TControl;\r\n  private transformToFormGroup!: NgxSubFormComponent<TControl, TForm>['transformToFormGroup'];\r\n  private transformFromFormGroup!: NgxSubFormComponent<TControl, TForm>['transformFromFormGroup'];\r\n  private getDefaultValues!: NgxSubFormComponent<TControl, TForm>['getDefaultValues'];\r\n\r\n  public readonly parentValidatorOrOpts: ValidatorFn | ValidatorFn[] | AbstractControlOptions | null | undefined;\r\n  public readonly parentAsyncValidator: AsyncValidatorFn | AsyncValidatorFn[] | null | undefined;\r\n\r\n  constructor(\r\n    value: Partial<TControl> | null,\r\n    validatorOrOpts?: ValidatorFn | ValidatorFn[] | AbstractControlOptions | null,\r\n    asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[] | null,\r\n    //@Optional() @Inject(SUB_FORM_COMPONENT_TOKEN) public parentSubForm?: NgxSubFormComponent<any>,\r\n  ) {\r\n    // its important to NOT set validators here as this will trigger calls to value before setSubForm was called\r\n    super({});\r\n\r\n    // this is how to overwrite a propetotype property\r\n    //   Object.defineProperty(foo, \"bar\", {\r\n    //     // only returns odd die sides\r\n    //     get: function () { return (Math.random() * 6) | 1; }\r\n    // });\r\n\r\n    this.controlValue = (value || undefined) as TControl;\r\n\r\n    this._valueChanges = new CustomEventEmitter();\r\n\r\n    (this.valueChanges as any) = this._valueChanges;\r\n\r\n    this.parentValidatorOrOpts = validatorOrOpts;\r\n    this.parentAsyncValidator = asyncValidator;\r\n  }\r\n\r\n  setChangeDetector(cd: ChangeDetectorRef) {\r\n    this.cd = cd;\r\n  }\r\n\r\n  get value() {\r\n    // if (!this.subForm) {\r\n    //   return null;\r\n    // }\r\n\r\n    // const transformedValue = (this.transformFromFormGroup(\r\n    //   (super.value as any) as TForm,\r\n    // ) as unknown) as TControl;\r\n    // return transformedValue;\r\n\r\n    return this.controlValue;\r\n  }\r\n\r\n  set value(value: any) {\r\n    if (!this.subForm) {\r\n      return;\r\n    }\r\n\r\n    const formValue = (this.transformToFormGroup((value as unknown) as TControl, {}) as unknown) as TForm;\r\n\r\n    // TODO rethink as this might not work as we want it, we might not even need this anymore\r\n    // @ts-ignore\r\n    (super.value as any) = formValue;\r\n\r\n    this.controlValue = value;\r\n  }\r\n\r\n  setSubForm(subForm: NgxSubFormComponent<TControl, TForm>) {\r\n    this.subForm = subForm;\r\n    this._valueChanges.setSubForm(subForm);\r\n\r\n    if (this.root === this) {\r\n      this.isRoot = true;\r\n    }\r\n\r\n    // transform to form group should never return null / undefined but {} instead\r\n    this.transformToFormGroup = (obj: TControl | null, defaultValues: Partial<TForm>) => {\r\n      return this.subForm['transformToFormGroup'](obj, defaultValues) || ({} as TForm);\r\n    };\r\n    this.transformFromFormGroup = this.subForm['transformFromFormGroup'].bind(this.subForm);\r\n    this.getDefaultValues = this.subForm['getDefaultValues'].bind(this.subForm);\r\n  }\r\n\r\n  getRawValue(): TControl {\r\n    const rawValue = super.getRawValue();\r\n    return this.transformFromFormGroup(rawValue) as TControl;\r\n  }\r\n\r\n  setValue(value: TControl, options: { onlySelf?: boolean; emitEvent?: boolean } = {}): void {\r\n    // this happens when the parent sets a value but the sub-form-component has not run ngChanges yet\r\n    if (!this.subForm) {\r\n      if (value) {\r\n        this.controlValue = value;\r\n      }\r\n      return;\r\n    }\r\n\r\n    this.controlValue = value;\r\n\r\n    // TODO check if providing {} does work, as we do not want to override existing values with default values\r\n    // It might be that patchValue cannot be used as we dont have control over how transformToFormGroup is implemented\r\n    // it would have to be done in a way that returns a partial TForm which right now is not how the method signatures are defined\r\n    const formValue = (this.transformToFormGroup((value as unknown) as TControl, {}) as unknown) as TForm;\r\n\r\n    // TODO figure out how to handle for arrays\r\n    this.subForm.handleFormArrayControls(formValue);\r\n\r\n    super.patchValue(formValue, options);\r\n  }\r\n\r\n  patchValue(value: Partial<TControl>, options: { onlySelf?: boolean; emitEvent?: boolean } = {}): void {\r\n    // this happens when the parent sets a value but the sub-form-component has not tun ngOnInit yet\r\n    if (!this.subForm) {\r\n      if (value) {\r\n        this.controlValue = value as TControl;\r\n      }\r\n      return;\r\n    }\r\n\r\n    this.controlValue = { ...this.controlValue, ...value };\r\n\r\n    // TODO check if providing {} does work, as we do not want to override existing values with default values\r\n    // It might be that patchValue cannot be used as we dont have control over how transformToFormGroup is implemented\r\n    // it would have to be done in a way that returns a partial TForm which right now is not how the method signatures are defined\r\n    const formValue = (this.transformToFormGroup((value as unknown) as TControl, {}) as unknown) as TForm;\r\n\r\n    // TODO figure out how to handle for arrays\r\n    this.subForm.handleFormArrayControls(formValue);\r\n\r\n    super.patchValue(formValue, options);\r\n  }\r\n\r\n  reset(value?: Partial<TControl>, options: { onlySelf?: boolean; emitEvent?: boolean } = {}): void {\r\n    // reset is triggered from parent when formgroup is created\r\n    // then again from sub-form inside ngOnInit after subForm was set\r\n    // so when can safely ignore resets prior to subForm being set\r\n    if (!this.subForm) {\r\n      if (value) {\r\n        this.controlValue = value as TControl;\r\n      }\r\n      return;\r\n    }\r\n\r\n    // special handling for array sub-forms\r\n    if (Array.isArray(value)) {\r\n      this.controlValue = (value || []) as any;\r\n    } else {\r\n      this.controlValue = value as TControl;\r\n    }\r\n\r\n    const formValue = (this.transformToFormGroup(\r\n      (value as unknown) as TControl,\r\n      this.getDefaultValues(),\r\n    ) as unknown) as TForm;\r\n\r\n    // TODO figure out how to handle for arrays\r\n    this.subForm.handleFormArrayControls(formValue);\r\n\r\n    super.reset(formValue, options);\r\n\r\n    // const controlValue = (this.transformFromFormGroup((value as unknown) as TForm) as unknown) as TControl;\r\n  }\r\n\r\n  private getControlValue(control: AbstractControl): any {\r\n    if (control instanceof SubFormGroup) {\r\n      return control.controlValue;\r\n    } else if (control instanceof SubFormArray) {\r\n      return control.controls.map(arrayElementControl => this.getControlValue(arrayElementControl));\r\n    } else {\r\n      return control.value;\r\n    }\r\n  }\r\n\r\n  updateValue(options: any) {\r\n    if (!this.subForm) {\r\n      return;\r\n    }\r\n\r\n    const formValue = {} as any;\r\n    for (const [key, value] of Object.entries(this.subForm.formGroup.controls)) {\r\n      const control = value as AbstractControl;\r\n      formValue[key] = this.getControlValue(control);\r\n    }\r\n\r\n    const controlValue = (this.transformFromFormGroup(formValue || ({} as TForm)) as unknown) as TControl;\r\n\r\n    this.controlValue = controlValue;\r\n\r\n    if (this.isRoot) {\r\n      return;\r\n    }\r\n\r\n    const parent = this.parent as SubFormGroup<any, any> | SubFormArray<any, any>;\r\n    parent.updateValue(options);\r\n    //this.updateValueAndValidity(options);\r\n  }\r\n}\r\n\r\n// this idea of this is that when a non sub form group is being updated the sub form group needs to be notifed\r\nexport function patchFormControl<TControl, TForm>(subFormGroup: SubFormGroup<TControl, TForm>, control: FormControl) {\r\n  const patchableControl = control as FormControl & { isPatched: boolean };\r\n\r\n  if (!patchableControl.isPatched) {\r\n    const setValue = patchableControl.setValue.bind(patchableControl);\r\n    patchableControl.setValue = (value: any, options: any) => {\r\n      setValue(value, options);\r\n      subFormGroup.updateValue(options);\r\n    };\r\n    patchableControl.isPatched = true;\r\n  }\r\n}\r\n\r\nexport class SubFormArray<TControl, TForm = TControl> extends FormArray {\r\n  private subForm!: NgxSubFormComponent<TControl, TForm>;\r\n\r\n  private isRoot = false;\r\n  private _valueChanges: CustomEventEmitter<TControl, TForm>;\r\n  //public controlValue!: TControl[];\r\n  private transformToFormGroup!: NgxSubFormComponent<TControl, TForm>['transformToFormGroup'];\r\n  private transformFromFormGroup!: NgxSubFormComponent<TControl, TForm>['transformFromFormGroup'];\r\n  private getDefaultValues!: NgxSubFormComponent<TControl, TForm>['getDefaultValues'];\r\n\r\n  public readonly parentValidatorOrOpts: ValidatorFn | ValidatorFn[] | AbstractControlOptions | null | undefined;\r\n  public readonly parentAsyncValidator: AsyncValidatorFn | AsyncValidatorFn[] | null | undefined;\r\n\r\n  constructor(\r\n    subForm: NgxSubFormComponent<TControl, TForm>,\r\n    controls: AbstractControl[],\r\n    validatorOrOpts?: ValidatorFn | ValidatorFn[] | AbstractControlOptions | null,\r\n    asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[] | null,\r\n  ) {\r\n    // its important to NOT set validators here as this will trigger calls to value before setSubForm was called\r\n    super(controls);\r\n\r\n    this._valueChanges = new CustomEventEmitter();\r\n    (this.valueChanges as any) = this._valueChanges;\r\n\r\n    this.parentValidatorOrOpts = validatorOrOpts;\r\n    this.parentAsyncValidator = asyncValidator;\r\n\r\n    this.setSubForm(subForm);\r\n  }\r\n\r\n  setSubForm(subForm: NgxSubFormComponent<TControl, TForm>) {\r\n    this.subForm = subForm;\r\n    this._valueChanges.setSubForm(subForm);\r\n\r\n    // for some reason root is not properly set for form array\r\n    // on the other hand form array should never be root anyway so we can ignore thsi for now\r\n    // if (this.root === this) {\r\n    //   this.isRoot = true;\r\n    // }\r\n\r\n    // transform to form group should never return null / undefined but {} instead\r\n    this.transformToFormGroup = (obj: TControl | null, defaultValues: Partial<TForm>) => {\r\n      return this.subForm['transformToFormGroup'](obj, defaultValues) || ({} as TForm);\r\n    };\r\n    this.transformFromFormGroup = this.subForm['transformFromFormGroup'].bind(this.subForm);\r\n    this.getDefaultValues = this.subForm['getDefaultValues'].bind(this.subForm);\r\n  }\r\n\r\n  setValue(value: any, options: any) {\r\n    super.setValue(value, options);\r\n    ((this.subForm.formGroup as unknown) as SubFormGroup<any>).updateValue(options);\r\n  }\r\n\r\n  patchValue(value: any, options: any) {\r\n    super.patchValue(value, options);\r\n    ((this.subForm.formGroup as unknown) as SubFormGroup<any>).updateValue(options);\r\n  }\r\n\r\n  updateValue(options: any) {\r\n    if (!this.subForm) {\r\n      return;\r\n    }\r\n\r\n    (this.parent as any).updateValue(options);\r\n    //this.updateValueAndValidity(options);\r\n  }\r\n\r\n  removeAt(index: number): void {\r\n    super.removeAt(index);\r\n    ((this.subForm.formGroup as unknown) as SubFormGroup<any>).updateValue(undefined);\r\n  }\r\n}\r\n","// The following code is copied from angular source since those methods tehy are not exported\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {\r\n  AbstractControlOptions,\r\n  AsyncValidator,\r\n  AsyncValidatorFn,\r\n  Validator,\r\n  ValidatorFn,\r\n  Validators,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\n\r\n// https://github.com/angular/angular/blob/0075017b43a37d06780cc245c3326212d15fd6bd/packages/forms/src/directives/shared.ts\r\nfunction composeValidators(validators: Array<Validator | ValidatorFn>): ValidatorFn | null {\r\n  return validators != null ? Validators.compose(validators.map(normalizeValidator)) : null;\r\n}\r\nfunction composeAsyncValidators(validators: Array<AsyncValidator | AsyncValidatorFn>): AsyncValidatorFn | null {\r\n  return validators != null ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) : null;\r\n}\r\n\r\nfunction normalizeValidator(validator: ValidatorFn | Validator): ValidatorFn {\r\n  // thorws error in latest typescript version\r\n  //if ((<Validator>validator).validate) {\r\n  if ((<any>validator).validate) {\r\n    return (c: AbstractControl) => (<Validator>validator).validate(c);\r\n  } else {\r\n    return <ValidatorFn>validator;\r\n  }\r\n}\r\n\r\nfunction normalizeAsyncValidator(validator: AsyncValidatorFn | AsyncValidator): AsyncValidatorFn {\r\n  // thorws error in latest typescript version\r\n  //if ((<AsyncValidator>validator).validate) {\r\n  if ((<any>validator).validate) {\r\n    return (c: AbstractControl) => (<AsyncValidator>validator).validate(c);\r\n  } else {\r\n    return <AsyncValidatorFn>validator;\r\n  }\r\n}\r\n\r\n// https://github.com/angular/angular/blob/0075017b43a37d06780cc245c3326212d15fd6bd/packages/forms/src/model.ts\r\nfunction isOptionsObj(validatorOrOpts?: ValidatorFn | ValidatorFn[] | AbstractControlOptions | null): boolean {\r\n  return validatorOrOpts != null && !Array.isArray(validatorOrOpts) && typeof validatorOrOpts === 'object';\r\n}\r\nexport function coerceToValidator(\r\n  validatorOrOpts?: ValidatorFn | ValidatorFn[] | AbstractControlOptions | null,\r\n): ValidatorFn | null {\r\n  const validator = (isOptionsObj(validatorOrOpts)\r\n    ? (validatorOrOpts as AbstractControlOptions).validators\r\n    : validatorOrOpts) as ValidatorFn | ValidatorFn[] | null;\r\n\r\n  return Array.isArray(validator) ? composeValidators(validator) : validator || null;\r\n}\r\n\r\nexport function coerceToAsyncValidator(\r\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[] | null,\r\n  validatorOrOpts?: ValidatorFn | ValidatorFn[] | AbstractControlOptions | null,\r\n): AsyncValidatorFn | null {\r\n  const origAsyncValidator = (isOptionsObj(validatorOrOpts)\r\n    ? (validatorOrOpts as AbstractControlOptions).asyncValidators\r\n    : asyncValidator) as AsyncValidatorFn | AsyncValidatorFn | null;\r\n\r\n  return Array.isArray(origAsyncValidator) ? composeAsyncValidators(origAsyncValidator) : origAsyncValidator || null;\r\n}\r\n","import { AfterContentChecked, Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  AbstractControlOptions,\r\n  AsyncValidatorFn,\r\n  FormArray,\r\n  FormControl,\r\n  ValidatorFn,\r\n} from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { coerceToAsyncValidator, coerceToValidator } from './abstract-control-utils';\r\nimport {\r\n  ArrayPropertyKey,\r\n  ControlMap,\r\n  Controls,\r\n  ControlsNames,\r\n  ControlsType,\r\n  isNullOrUndefined,\r\n  TypedAbstractControl,\r\n} from './ngx-sub-form-utils';\r\nimport { FormGroupOptions, NgxFormWithArrayControls, TypedSubFormGroup } from './ngx-sub-form.types';\r\nimport { patchFormControl, SubFormGroup } from './sub-form-group';\r\n\r\ntype MapControlFunction<FormInterface, MapValue> = (ctrl: AbstractControl, key: keyof FormInterface) => MapValue;\r\ntype FilterControlFunction<FormInterface> = (\r\n  ctrl: TypedAbstractControl<any>,\r\n  key: keyof FormInterface,\r\n  isCtrlWithinFormArray: boolean,\r\n) => boolean;\r\n\r\n@Directive()\r\n// tslint:disable-next-line: directive-class-suffix\r\nexport abstract class NgxSubFormComponent<ControlInterface, FormInterface = ControlInterface>\r\n  implements OnChanges, AfterContentChecked {\r\n  // when developing the lib it's a good idea to set the formGroup type\r\n  // to current + `| undefined` to catch a bunch of possible issues\r\n  // see @note form-group-undefined\r\n\r\n  // tslint:disable-next-line: no-input-rename\r\n  @Input('subForm') formGroup!: TypedSubFormGroup<ControlInterface, FormInterface>;\r\n\r\n  protected emitNullOnDestroy = true;\r\n  protected emitInitialValueOnInit = true;\r\n\r\n  // can't define them directly\r\n  protected abstract getFormControls(): Controls<FormInterface>;\r\n\r\n  public get formControlNames(): ControlsNames<FormInterface> {\r\n    // see @note form-group-undefined for as syntax\r\n    return this.mapControls(\r\n      (_, key) => key,\r\n      () => true,\r\n      false,\r\n    ) as ControlsNames<FormInterface>;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (\r\n      changes['dataInput'] === undefined &&\r\n      (changes['formGroup'] === undefined || (changes['formGroup'].firstChange && !changes['formGroup'].currentValue))\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    if (!this.formGroup) {\r\n      throw new Error('The subForm input was not provided but is required.');\r\n    }\r\n\r\n    if (!(this.formGroup instanceof SubFormGroup)) {\r\n      throw new Error('The subForm input needs to be of type SubFormGroup.');\r\n    }\r\n\r\n    const dataInputHasChanged = changes['dataInput'] !== undefined;\r\n    this._initializeFormGroup(dataInputHasChanged);\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    // TODO this runs too often, find out of this can be triggered differently\r\n    // checking if the form group has a change detector (root forms might not)\r\n    if (this.formGroup?.cd) {\r\n      // if this is the root form\r\n      // OR if ist a sub form but the root form does not have a change detector\r\n      // we need to actually run change detection vs just marking for check\r\n      if (!this.formGroup.parent) {\r\n        this.formGroup.cd.detectChanges();\r\n      } else {\r\n        this.formGroup.cd.markForCheck();\r\n      }\r\n    }\r\n  }\r\n\r\n  // is usually called by ngOnChanges\r\n  // but if root form is used without input attributes ngOnChanges might not be called\r\n  // hence if it wasn't called yet it is called from ngOnInit in root form\r\n  protected _initializeFormGroup(dataInputHasChanged: boolean = false) {\r\n    Object.keys(this.formGroup.controls).forEach(key => {\r\n      this.formGroup.removeControl(key);\r\n    });\r\n\r\n    const subForm = this.formGroup;\r\n\r\n    const controls = this.getFormControls();\r\n    for (const key in controls) {\r\n      if (controls.hasOwnProperty(key)) {\r\n        const control = controls[key];\r\n\r\n        // we need to wire up the form controls with the sub form group\r\n        // this allows us to transform the sub form value to ControlInterface\r\n        // every time any of the form controls on the sub form change\r\n        if (control instanceof FormControl) {\r\n          patchFormControl(subForm, control);\r\n        }\r\n\r\n        this.formGroup.addControl(key, control);\r\n      }\r\n    }\r\n\r\n    // connect sub form group with current sub-form-component\r\n    subForm.setSubForm(this);\r\n\r\n    const options = this.getFormGroupControlOptions() as AbstractControlOptions;\r\n\r\n    const validators: ValidatorFn[] = [];\r\n    const asyncValidators: AsyncValidatorFn[] = [];\r\n\r\n    // get validators that were passed into the sub form group on the parent\r\n    if (subForm.parentValidatorOrOpts) {\r\n      const validator = coerceToValidator(subForm.parentValidatorOrOpts);\r\n      if (validator) {\r\n        validators.push(validator);\r\n      }\r\n    }\r\n\r\n    // get async validators that were passed into the sub form group on the parent\r\n    if (subForm.parentAsyncValidator) {\r\n      const validator = coerceToAsyncValidator(subForm.parentAsyncValidator);\r\n      if (validator) {\r\n        asyncValidators.push(validator);\r\n      }\r\n    }\r\n\r\n    // handle AbstractControlOptions from getFormGroupControlOptions\r\n    if (options) {\r\n      if (options.updateOn) {\r\n        // sadly there is no public metohd that lets us change the update strategy of an already created FormGroup\r\n        (this.formGroup as any)._setUpdateStrategy(options.updateOn);\r\n      }\r\n\r\n      if (options.validators) {\r\n        const validator = coerceToValidator(options.validators);\r\n        if (validator) {\r\n          validators.push(validator);\r\n        }\r\n      }\r\n\r\n      if (options.asyncValidators) {\r\n        const validator = coerceToAsyncValidator(options.asyncValidators);\r\n        if (validator) {\r\n          asyncValidators.push(validator);\r\n        }\r\n      }\r\n    }\r\n\r\n    // set validators / async validators on sub form group\r\n    if (validators.length > 0) {\r\n      this.formGroup.setValidators(validators);\r\n    }\r\n    if (asyncValidators.length > 0) {\r\n      this.formGroup.setAsyncValidators(asyncValidators);\r\n    }\r\n\r\n    // if the form has default values, they should be applied straight away\r\n    const defaultValues: Partial<FormInterface> | null = this.getDefaultValues();\r\n\r\n    // get default values for reset, if null fallback to undefined as there si a difference when calling reset\r\n    const transformedValue = this.transformFromFormGroup(defaultValues as FormInterface) || undefined;\r\n\r\n    let mergedValues: ControlInterface;\r\n    // not sure if this case is relevant as arrays are sub forms and would be handled by the other logic below\r\n    if (Array.isArray(transformedValue)) {\r\n      mergedValues = subForm.controlValue;\r\n    } else {\r\n      const controlValue = (dataInputHasChanged\r\n        ? (this as any)['dataInput']\r\n        : subForm.controlValue) as ControlInterface;\r\n\r\n      if (transformedValue && controlValue) {\r\n        mergedValues = { ...transformedValue, controlValue };\r\n      } else if (transformedValue) {\r\n        mergedValues = transformedValue;\r\n      } else {\r\n        mergedValues = controlValue;\r\n      }\r\n    }\r\n\r\n    const formValue = this.transformToFormGroup(mergedValues, {});\r\n    this.handleFormArrayControls(formValue);\r\n\r\n    // self = false is critical here\r\n    // this allows the parent form to re-evaluate its status after each of its sub form has completed intialization\r\n    // we actually only need to call this on the deepest sub form in a tree (leaves)\r\n    // but there is no way to identify if there are sub forms on the current form + that are also rendered\r\n    // as only when sub forms are rendered the on changes method on the sub form is executed\r\n\r\n    // TODO decide if we want to emit an event when input control value != control value after intialization\r\n    // this happens for example when null is passed in but default values change the value of the inner form\r\n    this.formGroup.reset(mergedValues, { onlySelf: false, emitEvent: false });\r\n  }\r\n\r\n  private mapControls<MapValue>(\r\n    mapControl: MapControlFunction<FormInterface, MapValue>,\r\n    filterControl: FilterControlFunction<FormInterface>,\r\n    recursiveIfArray: boolean,\r\n  ): Partial<ControlMap<FormInterface, MapValue | MapValue[]>> | null;\r\n  private mapControls<MapValue>(\r\n    mapControl: MapControlFunction<FormInterface, MapValue>,\r\n  ): ControlMap<FormInterface, MapValue | MapValue[]> | null;\r\n  private mapControls<MapValue>(\r\n    mapControl: MapControlFunction<FormInterface, MapValue>,\r\n    filterControl: FilterControlFunction<FormInterface> = () => true,\r\n    recursiveIfArray: boolean = true,\r\n  ): Partial<ControlMap<FormInterface, MapValue | MapValue[]>> | null {\r\n    if (!this.formGroup) {\r\n      return null;\r\n    }\r\n\r\n    const formControls: ControlsType<FormInterface> = this.formGroup.controls;\r\n\r\n    const controls: Partial<ControlMap<FormInterface, MapValue | MapValue[]>> = {};\r\n\r\n    for (const key in formControls) {\r\n      if (this.formGroup.controls.hasOwnProperty(key)) {\r\n        const control = formControls[key];\r\n\r\n        if (recursiveIfArray && control instanceof FormArray) {\r\n          const values: MapValue[] = [];\r\n\r\n          for (let i = 0; i < control.length; i++) {\r\n            if (filterControl(control.at(i), key, true)) {\r\n              values.push(mapControl(control.at(i), key));\r\n            }\r\n          }\r\n\r\n          if (values.length > 0 && values.some(x => !isNullOrUndefined(x))) {\r\n            controls[key] = values;\r\n          }\r\n        } else if (control && filterControl(control, key, false)) {\r\n          controls[key] = mapControl(control, key);\r\n        }\r\n      }\r\n    }\r\n\r\n    return controls;\r\n  }\r\n\r\n  /**\r\n   * Extend this method to provide custom local FormGroup level validation\r\n   */\r\n  protected getFormGroupControlOptions(): FormGroupOptions<FormInterface> {\r\n    return {};\r\n  }\r\n\r\n  // when getDefaultValues is defined, you do not need to specify the default values\r\n  // in your form (the ones defined within the `getFormControls` method)\r\n  protected getDefaultValues(): Partial<FormInterface> {\r\n    return {};\r\n  }\r\n\r\n  public handleFormArrayControls(obj: any) {\r\n    // TODO check if this can still happen, it appreaded during development. might alerady be fixed\r\n    if (!this.formGroup) {\r\n      return;\r\n    }\r\n\r\n    Object.entries(obj).forEach(([key, value]) => {\r\n      if (this.formGroup.get(key) instanceof FormArray && Array.isArray(value)) {\r\n        const formArray: FormArray = this.formGroup.get(key) as FormArray;\r\n\r\n        // instead of creating a new array every time and push a new FormControl\r\n        // we just remove or add what is necessary so that:\r\n        // - it is as efficient as possible and do not create unnecessary FormControl every time\r\n        // - validators are not destroyed/created again and eventually fire again for no reason\r\n        while (formArray.length > value.length) {\r\n          formArray.removeAt(formArray.length - 1);\r\n        }\r\n\r\n        for (let i = formArray.length; i < value.length; i++) {\r\n          if (this.formIsFormWithArrayControls()) {\r\n            formArray.insert(i, this.createFormArrayControl(key as ArrayPropertyKey<FormInterface>, value[i]));\r\n          } else {\r\n            const control = new FormControl(value[i]);\r\n            patchFormControl(this.formGroup, control);\r\n            formArray.insert(i, control);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private formIsFormWithArrayControls(): this is NgxFormWithArrayControls<FormInterface> {\r\n    return typeof ((this as unknown) as NgxFormWithArrayControls<FormInterface>).createFormArrayControl === 'function';\r\n  }\r\n\r\n  // when customizing the emission rate of your sub form component, remember not to **mutate** the stream\r\n  // it is safe to throttle, debounce, delay, etc but using skip, first, last or mutating data inside\r\n  // the stream will cause issues!\r\n  public handleEmissionRate(): (obs$: Observable<ControlInterface | null>) => Observable<ControlInterface | null> {\r\n    return obs$ => obs$;\r\n  }\r\n\r\n  // that method can be overridden if the\r\n  // shape of the form needs to be modified\r\n  protected transformToFormGroup(\r\n    obj: ControlInterface | null,\r\n    fallbackValue: Partial<FormInterface> | null,\r\n  ): FormInterface | null {\r\n    // formGroup values can't be null\r\n    return (obj || fallbackValue || {}) as FormInterface;\r\n  }\r\n\r\n  // that method can be overridden if the\r\n  // shape of the form needs to be modified\r\n  protected transformFromFormGroup(formValue: FormInterface): ControlInterface | null {\r\n    return (formValue as any) as ControlInterface;\r\n  }\r\n}\r\n\r\n@Directive()\r\n// tslint:disable-next-line: directive-class-suffix\r\nexport abstract class NgxSubFormRemapComponent<ControlInterface, FormInterface> extends NgxSubFormComponent<\r\n  ControlInterface,\r\n  FormInterface\r\n> {\r\n  protected abstract transformToFormGroup(\r\n    obj: ControlInterface | null,\r\n    fallbackValue: Partial<FormInterface> | null,\r\n  ): FormInterface | null;\r\n  protected abstract transformFromFormGroup(formValue: FormInterface): ControlInterface | null;\r\n}\r\n","import { ChangeDetectorRef, Directive, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\r\nimport isEqual from 'fast-deep-equal';\r\nimport { Subject } from 'rxjs';\r\nimport { filter, tap } from 'rxjs/operators';\r\n\r\nimport { isNullOrUndefined, takeUntilDestroyed } from './ngx-sub-form-utils';\r\nimport { NgxSubFormRemapComponent } from './ngx-sub-form.component';\r\nimport { TypedSubFormGroup } from './ngx-sub-form.types';\r\nimport { SubFormGroup } from './sub-form-group';\r\n\r\n@Directive()\r\n// tslint:disable-next-line: directive-class-suffix\r\nexport abstract class NgxRootFormComponent<ControlInterface, FormInterface = ControlInterface>\r\n  extends NgxSubFormRemapComponent<ControlInterface, FormInterface>\r\n  implements OnInit, OnDestroy, OnChanges {\r\n  public abstract dataInput: Required<ControlInterface> | null | undefined;\r\n\r\n  public abstract dataOutput: EventEmitter<ControlInterface>;\r\n  // using a private variable `_dataOutput$` to be able to control the\r\n  // emission rate with a debounce or throttle for ex\r\n  /** @internal */\r\n  protected _dataOutput$: Subject<ControlInterface> = new Subject();\r\n\r\n  protected emitInitialValueOnInit = false;\r\n  protected emitNullOnDestroy = false;\r\n\r\n  protected dataValue: ControlInterface | null = null;\r\n\r\n  private formGroupInitialized = false;\r\n\r\n  // change detector only needs to be passed from root form\r\n  // for sub forms the sub-form-directive injects the change detector ref for us\r\n  constructor(cd: ChangeDetectorRef) {\r\n    super();\r\n    this.formGroup = new SubFormGroup<ControlInterface, FormInterface>({}) as TypedSubFormGroup<\r\n      ControlInterface,\r\n      FormInterface\r\n    >;\r\n\r\n    if (cd) {\r\n      this.formGroup.setChangeDetector(cd);\r\n    }\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    if (!this.formGroupInitialized) {\r\n      this._initializeFormGroup();\r\n      this.formGroupInitialized = true;\r\n    }\r\n\r\n    this._dataOutput$\r\n      .pipe(\r\n        takeUntilDestroyed(this),\r\n        filter(() => this.formGroup.valid),\r\n        tap(value => this.dataOutput.emit(value)),\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    super.ngOnChanges(changes);\r\n    this.formGroupInitialized = true;\r\n  }\r\n\r\n  // needed for take until destroyed\r\n  ngOnDestroy(): void {}\r\n\r\n  /** @internal */\r\n  protected onRegisterOnChangeHook(data: ControlInterface | null): boolean {\r\n    if (this.formGroup.invalid || isEqual(data, this.dataInput)) {\r\n      return false;\r\n    }\r\n\r\n    this.dataValue = data;\r\n    return true;\r\n  }\r\n\r\n  protected transformToFormGroup(\r\n    obj: ControlInterface | null,\r\n    defaultValues: Partial<FormInterface> | null,\r\n  ): FormInterface | null {\r\n    return (obj as unknown) as FormInterface;\r\n  }\r\n\r\n  protected transformFromFormGroup(formValue: FormInterface): ControlInterface | null {\r\n    return (formValue as unknown) as ControlInterface;\r\n  }\r\n\r\n  public manualSave(): void {\r\n    // if (this.formGroup.valid) {\r\n    //   this.dataValue = this.formGroup.controlValue;\r\n    //   this._dataOutput$.next(this.dataValue);\r\n    // }\r\n    this.dataValue = this.formGroup.controlValue as ControlInterface;\r\n    if (!isNullOrUndefined(this.dataValue) && this.formGroup.valid) {\r\n      this._dataOutput$.next(this.dataValue);\r\n    }\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Directive, OnDestroy, OnInit, Optional } from '@angular/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { filter, startWith, tap } from 'rxjs/operators';\r\n\r\nimport { NgxRootFormComponent } from './ngx-root-form.component';\r\nimport { takeUntilDestroyed } from './ngx-sub-form-utils';\r\n\r\ntype FormGroupStatus = 'DISABLED' | 'PENDING' | 'INVALID' | 'VALID';\r\n\r\n@Directive()\r\n// tslint:disable-next-line: directive-class-suffix\r\nexport abstract class NgxAutomaticRootFormComponent<ControlInterface, FormInterface = ControlInterface>\r\n  extends NgxRootFormComponent<ControlInterface, FormInterface>\r\n  implements OnInit, OnDestroy {\r\n  constructor(cd: ChangeDetectorRef) {\r\n    super(cd);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n\r\n    const status$ = this.formGroup.statusChanges.pipe(startWith(this.formGroup.status)) as Observable<FormGroupStatus>;\r\n\r\n    const value$ = this.formGroup.valueChanges.pipe(startWith(this.formGroup.value));\r\n\r\n    combineLatest([status$, value$])\r\n      .pipe(\r\n        takeUntilDestroyed(this),\r\n        filter(([status, value]) => status === 'VALID'),\r\n        tap(() => this.manualSave()),\r\n      )\r\n      .subscribe();\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\nimport { SubFormGroup } from './sub-form-group';\r\n\r\n@Directive({\r\n  selector: '[subForm]',\r\n})\r\nexport class SubFormDirective<TControl, TForm> implements OnChanges {\r\n  @Input() subForm!: SubFormGroup<TControl, TForm>;\r\n\r\n  constructor(private cd: ChangeDetectorRef) {}\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.subForm && this.subForm) {\r\n      this.subForm.setChangeDetector(this.cd);\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SubFormDirective } from './sub-form.directive';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SubFormDirective\r\n  ],\r\n  imports: [\r\n    CommonModule,    \r\n  ],\r\n  exports: [\r\n    SubFormDirective\r\n  ]\r\n})\r\nexport class NgxSubFormModule { }\r\n"],"names":["InjectionToken","NG_VALUE_ACCESSOR","forwardRef","NG_VALIDATORS","debounce","timer","Subject","takeUntil","EventEmitter","FormGroup","FormArray","Validators","FormControl","Input","Directive","filter","tap","ChangeDetectorRef","startWith","combineLatest","NgModule","CommonModule"],"mappings":"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"}